name: Check OEM Kernel Manifest for Updates

on:
  schedule:
    # - cron: "0 0 * * *"  # Runs every day at midnight UTC
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:

jobs:
  check-oem-updates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout self
        uses: actions/checkout@v3

      - name: Check for new commit in OEM repo
        id: check
        run: |
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/OnePlusOSS/kernel_manifest/commits?sha=oneplus/sm8750 | jq -r '.[0].sha')
          echo "Latest OEM Commit: $LATEST_COMMIT"

          # Use GitHub Actions cache to store and retrieve the last seen commit hash
          CACHE_KEY="oem-commit-${LATEST_COMMIT}"

          # Check if the cache for the previous commit exists
          CACHE_PATH=".last_oem_commit"
          if [ -f "$CACHE_PATH" ]; then
            LAST_COMMIT=$(cat $CACHE_PATH)
          else
            LAST_COMMIT=""
          fi
          echo "Last Seen Commit: $LAST_COMMIT"

          # Compare the commits
          if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ]; then
            echo "New commit detected!"
            echo "::set-output name=changed::true"
            echo "$LATEST_COMMIT" > $CACHE_PATH
          else
            echo "No changes."
            echo "::set-output name=changed::false"
          fi

      - name: Trigger Kernel Build Workflow
        if: steps.check.outputs.changed == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-kernel-release.yml
          ref: op13
          inputs: '{ "make_release": "true" }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache the commit hash
        uses: actions/cache@v3
        with:
          path: .last_oem_commit
          key: "oem-commit-${LATEST_COMMIT}"
          restore-keys: |
            oem-commit-
